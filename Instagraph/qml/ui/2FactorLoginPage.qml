import QtQuick 2.12
import Lomiri.Components 1.3
import QtQuick.LocalStorage 2.12
import QtGraphicalEffects 1.0
import Lomiri.Components.Styles 1.3

import "../components"

import "../js/Storage.js" as Storage

PageItem {
    id: twoFactorLoginPage

    property var answer

    property var has_sms: false
    property var has_totp: false

    property string phoneEnding: ""

    header: PageHeaderItem {
        title: i18n.tr("Enter Security Code")
    }

    Component.onCompleted: {
        if (answer.two_factor_info.sms_two_factor_on == true) {
            has_sms = true

            phoneEnding = answer.two_factor_info.obfuscated_phone_number;
        }
        if (answer.two_factor_info.totp_two_factor_on == true) {
            has_totp = true
        }
    }

    Column {
        anchors {
            top: twoFactorLoginPage.header.bottom
            topMargin: units.gu(3)
        }
        width: parent.width
        spacing: units.gu(2)

        Label {
            width: parent.width - units.gu(6)
            anchors.horizontalCenter: parent.horizontalCenter
            text: has_totp ? i18n.tr("Enter the 6-digit code generated by your authentication app.") : i18n.tr("Enter the 6-digit code we sent to your number ending in %1").arg(phoneEnding)
            wrapMode: Text.WordWrap
            horizontalAlignment: Text.AlignHCenter
            fontSize: "large"
        }

        Item {
            width: parent.width
            height: units.gu(2)
        }

        TextField {
            id: codeField
            width: parent.width*0.8
            height: units.gu(5)
            anchors.horizontalCenter: parent.horizontalCenter
            placeholderText: i18n.tr("6-digit code")
            onVisibleChanged: {
                if (visible) {
                    forceActiveFocus()
                }
            }
        }

        Button {
            width: parent.width*0.8
            height: units.gu(5)
            anchors.horizontalCenter: parent.horizontalCenter
            color: LomiriColors.blue
            text: i18n.tr("Confirm")
            onTriggered: {
                instagram.confirm2Factor(codeField.text, answer.two_factor_info.two_factor_identifier, has_totp ? "3" : "1");
            }
        }

        Item {
            width: parent.width
            height: units.gu(2)
        }

        Label {
            id: errorTextLabel
            anchors.horizontalCenter: parent.horizontalCenter
            wrapMode: Text.WordWrap
            color: "#ffffff"
        }
    }

    Connections{
        target: instagram
        onProfileConnected:{

        }
        onProfileConnectedFail:{
            console.log('login failed')
        }
        onError:{
            console.log(message);
            errorTextLabel.text = message;
        }
    }
}
